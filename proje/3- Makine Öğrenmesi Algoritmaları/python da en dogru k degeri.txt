import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("C:/Users/Labib/Desktop/projekt/5.dönem/Zeki Sistemlere Giriş/sunum/6  K-NN/diabetes.csv")
data.head()

sekerhastasi = data[data.Outcome==1]
saglikli = data[data.Outcome==0]

plt.scatter(saglikli.Age, saglikli.Glucose,color="green", label="sağlıklı", alpha=0.4)
plt.scatter(sekerhastasi.Age, sekerhastasi.Glucose,color="red", label="hasta", alpha=0.4)
plt.xlabel("yas")
plt.ylabel("glukoz")
plt.legend()
plt.show()

x1=data.iloc[:,0:-1]
y1=data.iloc[:,-1].values # ya 0 ya 1

from sklearn.model_selection import train_test_split
xtrain, xtest,ytrain,ytest = train_test_split(x1,y1,test_size=0.3,random_state=43)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()

xtrain1=sc.fit_transform(xtrain)
xtest1=sc.transform(xtest)

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(12)

knn.fit(xtrain1, ytrain) # KNeighborsClassifier(n_neighbors=12)


yhead=knn.predict(xtest1)
knn.score(xtest1,ytest)
# Her k değeri için çapraz değerlendirme puanlarını saklamak için bir sözlük
scorelite=[]
for i in range(1,30):
    knn2=KNeighborsClassifier(n_neighbors=i)
    knn2.fit(xtrain1,ytrain)
    scorelite.append(knn2.score(xtest1,ytest))
# Çapraz değerlendirmede en yüksek doğruluk puanını veren K değerini bulun
plt.plot(range(1,30), scorelite)
plt.xlabel("komşu sayısı")
plt.ylabel("dogruluk")
plt.show()
